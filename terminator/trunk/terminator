#!/bin/bash
TERMINATOR_HOME=`dirname $0`
CLASSPATH=$TERMINATOR_HOME/classes:$TERMINATOR_HOME/../salma-hayek/classes:$TERMINATOR_HOME/terminator.jar
PTY_BINARY=$TERMINATOR_HOME/pty/pty-`uname`-`arch`

if [ ! -f ~/.terminator ]
then
  if [ "`uname`" == "Darwin" ]
  then
    PROPS_VARIANT=macosx
  elif ps -e | grep --quiet kde
  then
    PROPS_VARIANT=kde
  elif ps -e | grep --quiet gnome
  then
    PROPS_VARIANT=gnome
  else
    echo Failed to recognize your windowing environment - choosing GNOME defaults.
    echo Read $TERMINATOR_HOME/README for more information.
    PROPS_VARIANT=gnome
  fi
  cp $TERMINATOR_HOME/doc/props-examples/$PROPS_VARIANT.terminator ~/.terminator
fi

if [ ! -w /usr/share/terminfo ]
then
  export TERMINFO=~/.terminfo
else
  export TERMINFO=/usr/share/terminfo
fi

TIC=`type -p tic`
TERMINFO_SRC=$TERMINATOR_HOME/doc/terminfo/terminator.tic
TERMINFO_DST=$TERMINFO/t/terminator
if [ "`uname`" == "Darwin" ]
then
    # Mac OS X 10.3 only looks in /74/, but tic puts stuff in /t/.
    TERMINFO_DST=$TERMINFO/74/terminator
    TIC=""
    # While we're here, make ourselves look a little better...
    OS_SPECIFIC_OPTIONS=-Xdock:name=Terminator:icon=/Applications/Utilities/Terminal.app/Contents/Resources/icon.icns
fi
if [ ! -e $TERMINFO_DST ]
then
    mkdir -p $TERMINFO_DST && rmdir $TERMINFO_DST
fi

if [ "$TIC" != "" ]
then
    tic -o$TERMINFO $TERMINFO_SRC
else
  if [ ! -e $TERMINFO_DST ]
  then
    cp $TERMINATOR_HOME/doc/terminfo/terminator $TERMINFO_DST
  fi
fi

mkdir -p ~/.terminal-logs && chmod og-rx ~/.terminal-logs

# If we don't have a pre-compiled 'pty' program for this
# architecture, try to build it.
test -e $PTY_BINARY || make -C pty/

exec java -cp $CLASSPATH $OS_SPECIFIC_OPTIONS -Dpty.binary=$PTY_BINARY terminator.Terminator "$@"
