* On Mac OS, a click on the Dock icon when we have no windows open ought to
  open a new window.

* Our sideways-scrolling performance is weak when we have long lines. We don't
  take the clip rectangle into account to try to avoid work, and ask
  Graphics.drawString to render really long lines. On Mac OS, at least, this
  isn't a very good idea; even with a monospaced font, it seems to assume
  you've done the clipping yourself.

* Make an about box. [I still have the code to do a convincing imitation of
  NSApplication's orderFrontStandardAboutPanel lying around somewhere. I'm
  still waiting for Swing to have a JAboutBox; unlike file choosers and font
  panels, this is one that should be doable.]

* Parse Mac OS Terminal.app settings. (Only if running on Mac OS?)

* Feedback on other tabs when there's been output you haven't seen yet? I'm
  thinking of something like a Mac OS asynchronous progress indicator in the
  tab ears of non-visible tabs. One turn per line of unseen output? That gives
  you both a Boolean "is there anything I haven't seen?" plus an open-ended
  way of showing further progress. Remember how much more useful Mail's dock
  badge count is than Outlook's Boolean.

* Shouldn't log while in alternate buffer mode. martind thinks logging is
  useful when looking at log files, to see when someone's used vim(1). My
  background with xwsh(1) makes me think we shouldn't even show the scroll bar
  in alternate buffer mode. Maybe we should ask you up-front, when you first
  use Terminator, which of the great terminal emulators you think is the one
  true emulator: xwsh or xterm? The former group get pretty much the current
  set of defaults, and the latter get a more black-on-white style.

* Phil suggested "add ability to view more than one terminal at a time, in a
  split pane, or in a 2d-tiled layout". I'm not entirely convinced, but can
  see an argument that the tab/window distinction shouldn't be so fixed. Why
  can't I make a tab into a window, or vice versa? What would the UI be,
  especially for turning a window into a tab? Apple's Terminal has a weird (to
  my mind) feature that lets you split a single terminal so you have two views
  into the same terminal. So you can be looking at one part of the scrollback
  while working at the bottom (one presumes). I've no idea what this is for,
  but felt I should mention it.

* Should allow the user to specify a log filename per tab, on the command line.
  Mail chrisa@bluearc.com when this is done, because he wants to use it.

* "Connect to Server" CS-K; don't implement Rendezvous (unless you're bored!)
  but take (user@)?host and port-scan for ssh, and fall back to telnet.

* Try to make sure we never cache options. Then we can think about adding stuff
  to e.forms to automatically generate a dialog. And -- scarier still --
  writing stuff back to .Xdefaults or whatever. This is probably a longer-term
  idea, though. There's a long way between our options stuff and something as
  good as Apple's. And I guess the right direction to go in is one that moves
  us away from .Xdefaults and .Xresources except as an initial land grab.

* Rewrite the hyper-link code to be less eager. [It's already rewritten to be
  less eager in the sense that I meant when I wrote this, but I wonder if the
  user shouldn't have to explicitly ask us to look for possible links? That
  might also give us scope for offering various selection-related actions.]

* Fix the speed of pasting large amounts of text (without breaking the
  correctness). [Have checked in code to fix this, but want a reproducible
  test case before switching over.]

* Fix the problem where sometimes the selection as pasted into another program
  doesn't match what appears to be selected. (I think this only happens when
  you've selected to the end of a line, and you get some amount of the text
  that follows on later lines.) [Haven't seen this in a while.]

* Now we support the graphical character set, we can get a terminal into the
  traditional unusable state. We should probably have a way to reset from
  Terminator (because you're not necessarily talking to Unix, and even if you
  are, you don't necessarily know what to do).

* Our double-click selection may be pretty clever in situations where xterm
  and rxvt aren't, but it doesn't work as well in situations they're good at:
  numbers in situations such as "offset=1234,length=5678". No-one does IP
  addresses well, that I've seen. [I take that back; Apple's Terminal does a
  pretty much perfect job. It has bracket matching, too.]
  Add bracket-matching double-click selection. This and better double-click
  selection are hard because we don't have anything that lets us iterate over
  the model as if it were a String. That would be the right way to implement
  this stuff; a TextBuffer.asCharSequence method.

* "whiptail --yesno food 8 40" still isn't right in Terminator.
  We have a pixel's gap between lines (which may not be our fault so much as
  the font's), and we've cleared the non-default background color to the right
  of the box.

* We should be able to "Copy With Styles" so we can paste color output into
  a mailer or whatever, and preserve the formatting. Presumably we can put
  HTML data on the clipboard? [See elliotth's blog for details.]

* The actions available on Mac OS should all be available on Linux, even if
  they aren't on the pop-up menu. menuAndKeyActions might want a keyActions
  sibling. If we fixed the menu bar to work on Linux, is there a way to have
  it present (for key handling) but invisible? That would be the nicest
  solution to this problem.
