* Our sideways-scrolling performance is weak when we have long lines. We don't
  take the clip rectangle into account to try to avoid work, and ask
  Graphics.drawString to render really long lines. On Mac OS, at least, this
  isn't a very good idea; even with a monospaced font, it seems to assume
  you've done the clipping yourself.

Make an about box.

Parse Mac OS Terminal.app settings. (Only if running on Mac OS?)

Feedback on other tabs when there's been output you haven't seen yet?

Shouldn't log while in alternate buffer mode.
Why not?  When catting the log files, I've found this useful.  It lets me see when johnh has been into vim.

Add ability to view more than one terminal at a time, in a split pane, or in a 2d-tiled layout.

The flashing green underline of a cursor is often difficult to find.  Fine by me if people really want the option but I don't think it should be the default.

Should allow the user to specify a log filename per tab, on the command line.

* "Connect to Server" CS-K; don't implement Rendezvous (unless you're bored!)
  but take (user@)?host and port-scan for ssh, and fall back to telnet.

* Try to make sure we never cache options. Then we can think about adding stuff
  to e.forms to automatically generate a dialog. And -- scarier still --
  writing stuff back to .Xdefaults or whatever. This is probably a longer-term
  idea, though. There's a long way between our options stuff and something as
  good as Apple's. And I guess the right direction to go in is one that moves
  us away from .Xdefaults and .Xresources except as an initial land grab.

* Rewrite the hyper-link code to be less eager.

* Fix the speed of pasting large amounts of text (without breaking the
  correctness).

* Fix the problem where sometimes the selection as pasted into another program
  doesn't match what appears to be selected. (I think this only happens when
  you've selected to the end of a line, and you get some amount of the text
  that follows on later lines.)

* Now we support the graphical character set, we can get a terminal into the
  traditional unusable state. We should probably have a way to reset from
  Terminator (because you're not necessarily talking to Unix, and even if you
  are, you don't necessarily know what to do).

* Our double-click selection may be pretty clever in situations where xterm
  and rxvt aren't, but it doesn't work as well in situations they're good at:
  numbers in situations such as "offset=1234,length=5678". No-one does IP
  addresses well, that I've seen. [I take that back; Apple's Terminal does a
  pretty much perfect job. It has bracket matching, too.]
  Add bracket-matching double-click selection. This and better double-click
  selection are hard because we don't have anything that lets us iterate over
  the model as if it were a String. That would be the right way to implement
  this stuff; a TextBuffer.asCharSequence method.

* "whiptail --yesno food 5 18" still isn't right in Terminator. We've got the
  foreground and background colors the wrong way round relative to xterm (and
  if you look at the two, it's obvious xterm is right), we have a pixel's gap
  between lines (which may not be our fault so much as the font's), and we've
  cleared the non-default background color to the right of the box.
