Items to be done for PTextArea:

* Compounding adjacent edits? Is there a behavior that we'd actually want? I usually find this more annoying than useful, even if it does save space.

* Refactor the way split lines are updated to work in terms of PLineSegments.

* Continue refactoring of line segment stuff in PTextArea.

* Auto-scroll on selection (all types) flickers more than I think it should when there's a wrapped line.

* the following JTextArea methods are thread-safe: append, insert, replace, and setText.

* Try to get rid of the "get methods which aren't" in the indentation code, perhaps by none, one or more ideas from this week's guest publication:

  class SourceLine {
    Indentation indentation;
    String code;
  }

  CommentUtilities.stripDoubleSlashComment

* Improve PNewlineInserter:

  (1) int fn(|P0 a0) {
    
       should become:
       
       int fn(
         P0 a0
       ) {

       This is waiting for a good idea.  That may come in the form of generalizing the problem or of deciding on an elegant way to implement it.
       
  (2) Exclude comments etc from the code which finds the mismatched brackets whose partners should be inserted.
